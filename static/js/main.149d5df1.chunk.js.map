{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","OrbitControls.js","RotationMenu.js","SelectedObjInfo.js","DemoApp.js","index.js"],"names":["App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","OrbitControls","object","domElement","this","undefined","document","enabled","THREE","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","Object","create","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","RotationMenu","props","getRotate","ID","axis","e","obj","Number","rotationMesh1","z","setState","values","rotationMesh2","returnRotation","preProps","preState","style","width","height","padding","backgroundColor","display","step","onChange","defaultValue","Component","SelectedObjInfo","log","headerStyle","rowStyle","titleStyle","selectedObjInfo","name","depth","ReactDOM","render","StrictMode","getElementById"],"mappings":"2LAAe,G,MAAA,IAA0B,kC,eCwB1BA,MArBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,mCCcVQ,EAAgB,SAASC,EAAQC,GACnCC,KAAKF,OAASA,EAEdE,KAAKD,gBAA4BE,IAAfF,EAA2BA,EAAaG,SAG1DF,KAAKG,SAAU,EAGfH,KAAKd,OAAS,IAAIkB,IAGlBJ,KAAKK,YAAc,EACnBL,KAAKM,YAAcC,IAGnBP,KAAKQ,QAAU,EACfR,KAAKS,QAAUF,IAIfP,KAAKU,cAAgB,EACrBV,KAAKW,cAAgBC,KAAKC,GAI1Bb,KAAKc,iBAAmBP,IACxBP,KAAKe,gBAAkBR,IAIvBP,KAAKgB,eAAgB,EACrBhB,KAAKiB,cAAgB,IAIrBjB,KAAKkB,YAAa,EAClBlB,KAAKmB,UAAY,EAGjBnB,KAAKoB,cAAe,EACpBpB,KAAKqB,YAAc,EAGnBrB,KAAKsB,WAAY,EACjBtB,KAAKuB,SAAW,EAChBvB,KAAKwB,oBAAqB,EAC1BxB,KAAKyB,YAAc,EAInBzB,KAAK0B,YAAa,EAClB1B,KAAK2B,gBAAkB,EAGvB3B,KAAK4B,YAAa,EAGlB5B,KAAK6B,KAAO,CAAEC,KAAM,GAAIC,GAAI,GAAIC,MAAO,GAAIC,OAAQ,IAGnDjC,KAAKkC,aAAe,CAClBJ,KAAM1B,IAAY0B,KAClBK,OAAQ/B,IAAY+B,OACpBH,MAAO5B,IAAY4B,OAIrBhC,KAAKoC,QAAUpC,KAAKd,OAAOmD,QAC3BrC,KAAKsC,UAAYtC,KAAKF,OAAOyC,SAASF,QACtCrC,KAAKwC,MAAQxC,KAAKF,OAAO2C,KAMzBzC,KAAK0C,cAAgB,WACnB,OAAOC,EAAUC,KAGnB5C,KAAK6C,kBAAoB,WACvB,OAAOF,EAAUG,OAGnB9C,KAAK+C,UAAY,WACfC,EAAMZ,QAAQa,KAAKD,EAAM9D,QACzB8D,EAAMV,UAAUW,KAAKD,EAAMlD,OAAOyC,UAClCS,EAAMR,MAAQQ,EAAMlD,OAAO2C,MAG7BzC,KAAKkD,MAAQ,WACXF,EAAM9D,OAAO+D,KAAKD,EAAMZ,SACxBY,EAAMlD,OAAOyC,SAASU,KAAKD,EAAMV,WACjCU,EAAMlD,OAAO2C,KAAOO,EAAMR,MAE1BQ,EAAMlD,OAAOqD,yBACbH,EAAMI,cAAcC,GAEpBL,EAAMM,SAENC,EAAQC,EAAMC,MAIhBzD,KAAKsD,OAAU,WACb,IAAII,EAAS,IAAItD,IAGbuD,GAAO,IAAIvD,KAAmBwD,mBAChC9D,EAAO+D,GACP,IAAIzD,IAAc,EAAG,EAAG,IAEtB0D,EAAcH,EAAKtB,QAAQ0B,UAE3BC,EAAe,IAAI5D,IACnB6D,EAAiB,IAAI7D,IAEzB,OAAO,WACL,IAAImC,EAAWS,EAAMlD,OAAOyC,SAoE5B,OAlEAmB,EAAOT,KAAKV,GAAU2B,IAAIlB,EAAM9D,QAGhCwE,EAAOS,gBAAgBR,GAGvBhB,EAAUyB,eAAeV,GAErBV,EAAMtB,YAAc6B,IAAUC,EAAMC,MACtCY,EAwIK,EAAIzD,KAAKC,GAAM,GAAK,GAAMmC,EAAMrB,iBArIvCgB,EAAUG,OAASwB,EAAexB,MAClCH,EAAUC,KAAO0B,EAAe1B,IAGhCD,EAAUG,MAAQlC,KAAK2D,IACrBvB,EAAMlC,gBACNF,KAAK4D,IAAIxB,EAAMjC,gBAAiB4B,EAAUG,QAI5CH,EAAUC,IAAMhC,KAAK2D,IACnBvB,EAAMtC,cACNE,KAAK4D,IAAIxB,EAAMrC,cAAegC,EAAUC,MAG1CD,EAAU8B,WAEV9B,EAAU+B,QAAUC,EAGpBhC,EAAU+B,OAAS9D,KAAK2D,IACtBvB,EAAM3C,YACNO,KAAK4D,IAAIxB,EAAM1C,YAAaqC,EAAU+B,SAIxC1B,EAAM9D,OAAO0F,IAAIC,GAEjBnB,EAAOoB,iBAAiBnC,GAGxBe,EAAOS,gBAAgBL,GAEvBvB,EAASU,KAAKD,EAAM9D,QAAQ0F,IAAIlB,GAEhCV,EAAMlD,OAAOiF,OAAO/B,EAAM9D,SAEE,IAAxB8D,EAAMhC,eACRsD,EAAexB,OAAS,EAAIE,EAAM/B,cAClCqD,EAAe1B,KAAO,EAAII,EAAM/B,cAEhC4D,EAAUG,eAAe,EAAIhC,EAAM/B,iBAEnCqD,EAAeW,IAAI,EAAG,EAAG,GAEzBJ,EAAUI,IAAI,EAAG,EAAG,IAGtBN,EAAQ,KAONO,GACAlB,EAAamB,kBAAkBnC,EAAMlD,OAAOyC,UAAY6C,GACxD,GAAK,EAAInB,EAAeoB,IAAIrC,EAAMlD,OAAOwF,aAAeF,KAExDpC,EAAMI,cAAcC,GAEpBW,EAAaf,KAAKD,EAAMlD,OAAOyC,UAC/B0B,EAAehB,KAAKD,EAAMlD,OAAOwF,YACjCJ,GAAc,GAEP,IA7FE,GAoGflF,KAAKuF,QAAU,WACbvC,EAAMjD,WAAWyF,oBAAoB,cAAeC,GAAe,GACnEzC,EAAMjD,WAAWyF,oBAAoB,YAAaE,GAAa,GAC/D1C,EAAMjD,WAAWyF,oBAAoB,QAASG,GAAc,GAE5D3C,EAAMjD,WAAWyF,oBAAoB,aAAcI,GAAc,GACjE5C,EAAMjD,WAAWyF,oBAAoB,WAAYK,GAAY,GAC7D7C,EAAMjD,WAAWyF,oBAAoB,YAAaM,GAAa,GAE/D5F,SAASsF,oBAAoB,YAAaO,GAAa,GACvD7F,SAASsF,oBAAoB,UAAWQ,GAAW,GAEnDC,OAAOT,oBAAoB,UAAWU,GAAW,IASnD,IAAIlD,EAAQhD,KAERqD,EAAc,CAAE8C,KAAM,UACtBC,EAAa,CAAED,KAAM,SACrBE,EAAW,CAAEF,KAAM,OAEnB3C,EAAQ,CACVC,MAAO,EACP6C,OAAQ,EACRC,MAAO,EACPC,IAAK,EACLC,aAAc,EACdC,gBAAiB,GAGfnD,EAAQC,EAAMC,KAEd2B,EAAM,KAGNzC,EAAY,IAAIvC,IAChBkE,EAAiB,IAAIlE,IAErBuE,EAAQ,EACRE,EAAY,IAAIzE,IAChB8E,GAAc,EAEdyB,EAAc,IAAIvG,IAClBwG,EAAY,IAAIxG,IAChByG,EAAc,IAAIzG,IAElB0G,EAAW,IAAI1G,IACf2G,EAAS,IAAI3G,IACb4G,EAAW,IAAI5G,IAEf6G,EAAa,IAAI7G,IACjB8G,EAAW,IAAI9G,IACf+G,EAAa,IAAI/G,IAMrB,SAASgH,IACP,OAAOxG,KAAKyG,IAAI,IAAMrE,EAAM7B,WAG9B,SAASkD,EAAWiD,GAClBhD,EAAexB,OAASwE,EAG1B,SAASC,EAASD,GAChBhD,EAAe1B,KAAO0E,EAGxB,IAAIE,EAAW,WACb,IAAIC,EAAI,IAAIrH,IAEZ,OAAO,SAAiBsH,EAAUC,GAChCF,EAAEG,oBAAoBD,EAAc,GACpCF,EAAEzC,gBAAgB0C,GAElB7C,EAAUD,IAAI6C,IAPH,GAWXI,EAAS,WACX,IAAIJ,EAAI,IAAIrH,IAEZ,OAAO,SAAesH,EAAUC,IACG,IAA7B3E,EAAMxB,mBACRiG,EAAEG,oBAAoBD,EAAc,IAEpCF,EAAEG,oBAAoBD,EAAc,GACpCF,EAAEK,aAAa9E,EAAMlD,OAAO+D,GAAI4D,IAGlCA,EAAEzC,eAAe0C,GAEjB7C,EAAUD,IAAI6C,IAbL,GAkBTM,EAAO,WACT,IAAIrE,EAAS,IAAItD,IAEjB,OAAO,SAAa4H,EAAQC,GAC1B,IAAIC,EACFlF,EAAMjD,aAAeG,SACjB8C,EAAMjD,WAAWoI,KACjBnF,EAAMjD,WAEZ,GAAIiD,EAAMlD,OAAOsI,oBAAqB,CAEpC,IAAI7F,EAAWS,EAAMlD,OAAOyC,SAC5BmB,EAAOT,KAAKV,GAAU2B,IAAIlB,EAAM9D,QAChC,IAAImJ,EAAiB3E,EAAO4E,SAG5BD,GAAkBzH,KAAK2H,IAAMvF,EAAMlD,OAAO0I,IAAM,EAAK5H,KAAKC,GAAM,KAGhE2G,EACG,EAAIQ,EAASK,EAAkBH,EAAQO,aACxCzF,EAAMlD,OAAO4I,QAEfb,EACG,EAAII,EAASI,EAAkBH,EAAQO,aACxCzF,EAAMlD,OAAO4I,aAEN1F,EAAMlD,OAAO6I,sBAEtBnB,EACGQ,GAAUhF,EAAMlD,OAAO8I,MAAQ5F,EAAMlD,OAAO+I,MAC3C7F,EAAMlD,OAAO2C,KACbyF,EAAQY,YACV9F,EAAMlD,OAAO4I,QAEfb,EACGI,GAAUjF,EAAMlD,OAAOiJ,IAAM/F,EAAMlD,OAAOkJ,QACzChG,EAAMlD,OAAO2C,KACbyF,EAAQO,aACVzF,EAAMlD,OAAO4I,UAIfO,QAAQC,KACN,gFAEFlG,EAAM1B,WAAY,IA9Cb,GAmDX,SAAS6H,EAAQC,GACXpG,EAAMlD,OAAOsI,oBACfzD,GAASyE,EACApG,EAAMlD,OAAO6I,sBACtB3F,EAAMlD,OAAO2C,KAAO7B,KAAK2D,IACvBvB,EAAMxC,QACNI,KAAK4D,IAAIxB,EAAMvC,QAASuC,EAAMlD,OAAO2C,KAAO2G,IAE9CpG,EAAMlD,OAAOqD,yBACb+B,GAAc,IAEd+D,QAAQC,KACN,uFAEFlG,EAAM9B,YAAa,GAIvB,SAASmI,EAASD,GACZpG,EAAMlD,OAAOsI,oBACfzD,GAASyE,EACApG,EAAMlD,OAAO6I,sBACtB3F,EAAMlD,OAAO2C,KAAO7B,KAAK2D,IACvBvB,EAAMxC,QACNI,KAAK4D,IAAIxB,EAAMvC,QAASuC,EAAMlD,OAAO2C,KAAO2G,IAE9CpG,EAAMlD,OAAOqD,yBACb+B,GAAc,IAEd+D,QAAQC,KACN,uFAEFlG,EAAM9B,YAAa,GAoBvB,SAASoI,EAAmBC,GAG1BzC,EAAS7B,IAAIsE,EAAMC,QAASD,EAAME,SA+LpC,SAAS/D,EAAY6D,GACnB,IAAsB,IAAlBvG,EAAM7C,QAAV,CAWA,OAPAoJ,EAAMG,iBAKN1G,EAAMjD,WAAW4J,MAAQ3G,EAAMjD,WAAW4J,QAAU1D,OAAO0D,QAEnDJ,EAAMK,QACZ,KAAK5G,EAAMd,aAAaJ,KACtB,GAAIyH,EAAMM,SAAWN,EAAMO,SAAWP,EAAMQ,SAAU,CACpD,IAAwB,IAApB/G,EAAM1B,UAAqB,OAE/BgI,EAAmBC,GAEnBhG,EAAQC,EAAMgD,QACT,CACL,IAA2B,IAAvBxD,EAAM5B,aAAwB,QAnO1C,SAA+BmI,GAG7B5C,EAAY1B,IAAIsE,EAAMC,QAASD,EAAME,SAkO/BO,CAAsBT,GAEtBhG,EAAQC,EAAM8C,OAGhB,MAEF,KAAKtD,EAAMd,aAAaC,OACtB,IAAyB,IAArBa,EAAM9B,WAAsB,QAvOtC,SAA8BqI,GAG5BtC,EAAWhC,IAAIsE,EAAMC,QAASD,EAAME,SAsOhCQ,CAAqBV,GAErBhG,EAAQC,EAAM+C,MAEd,MAEF,KAAKvD,EAAMd,aAAaF,MACtB,IAAwB,IAApBgB,EAAM1B,UAAqB,OAE/BgI,EAAmBC,GAEnBhG,EAAQC,EAAMgD,IAKdjD,IAAUC,EAAMC,OAClBvD,SAASgK,iBAAiB,YAAanE,GAAa,GACpD7F,SAASgK,iBAAiB,UAAWlE,GAAW,GAEhDhD,EAAMI,cAAcgD,KAIxB,SAASL,EAAYwD,GACnB,IAAsB,IAAlBvG,EAAM7C,QAIV,OAFAoJ,EAAMG,iBAEEnG,GACN,KAAKC,EAAM8C,OACT,IAA2B,IAAvBtD,EAAM5B,aAAwB,QA5PxC,SAA+BmI,GAG7B3C,EAAU3B,IAAIsE,EAAMC,QAASD,EAAME,SAEnC5C,EACGsD,WAAWvD,EAAWD,GACtB3B,eAAehC,EAAM3B,aAExB,IAAI6G,EACFlF,EAAMjD,aAAeG,SAAW8C,EAAMjD,WAAWoI,KAAOnF,EAAMjD,WAEhEsE,EAAY,EAAIzD,KAAKC,GAAKgG,EAAYuD,EAAKlC,EAAQO,cAEnDlB,EAAU,EAAI3G,KAAKC,GAAKgG,EAAYwD,EAAKnC,EAAQO,cAEjD9B,EAAY1D,KAAK2D,GAEjB5D,EAAMM,SA4OFgH,CAAsBf,GAEtB,MAEF,KAAK/F,EAAM+C,MACT,IAAyB,IAArBvD,EAAM9B,WAAsB,QA9OtC,SAA8BqI,GAG5BrC,EAASjC,IAAIsE,EAAMC,QAASD,EAAME,SAElCtC,EAAWgD,WAAWjD,EAAUD,GAE5BE,EAAWkD,EAAI,EACjBlB,EAAQ/B,KACCD,EAAWkD,EAAI,GACxBhB,EAASjC,KAGXH,EAAWhE,KAAKiE,GAEhBlE,EAAMM,SAiOFiH,CAAqBhB,GAErB,MAEF,KAAK/F,EAAMgD,IACT,IAAwB,IAApBxD,EAAM1B,UAAqB,QAnOrC,SAA4BiI,GAG1BxC,EAAO9B,IAAIsE,EAAMC,QAASD,EAAME,SAEhCzC,EAASmD,WAAWpD,EAAQD,GAAU9B,eAAehC,EAAMzB,UAE3DwG,EAAIf,EAASoD,EAAGpD,EAASqD,GAEzBvD,EAAS7D,KAAK8D,GAEd/D,EAAMM,SA0NFkH,CAAmBjB,IAMzB,SAASvD,EAAUuD,IACK,IAAlBvG,EAAM7C,UAIVD,SAASsF,oBAAoB,YAAaO,GAAa,GACvD7F,SAASsF,oBAAoB,UAAWQ,GAAW,GAEnDhD,EAAMI,cAAciD,GAEpB9C,EAAQC,EAAMC,MAGhB,SAASkC,EAAa4D,IAEA,IAAlBvG,EAAM7C,UACe,IAArB6C,EAAM9B,YACLqC,IAAUC,EAAMC,MAAQF,IAAUC,EAAM8C,SAI3CiD,EAAMG,iBACNH,EAAMkB,kBAENzH,EAAMI,cAAcgD,GAjPtB,SAA0BmD,GAGpBA,EAAMtB,OAAS,EACjBoB,EAASjC,KACAmC,EAAMtB,OAAS,GACxBkB,EAAQ/B,KAGVpE,EAAMM,SA0ONoH,CAAiBnB,GAEjBvG,EAAMI,cAAciD,IAGtB,SAASH,EAAUqD,IAEG,IAAlBvG,EAAM7C,UACe,IAArB6C,EAAMpB,aACc,IAApBoB,EAAM1B,WAhPV,SAAuBiI,GAOrB,OAFAA,EAAMG,iBAEEH,EAAMoB,SACZ,KAAK3H,EAAMnB,KAAKE,GACdgG,EAAI,EAAG/E,EAAMvB,aACbuB,EAAMM,SACN,MAEF,KAAKN,EAAMnB,KAAKI,OACd8F,EAAI,GAAI/E,EAAMvB,aACduB,EAAMM,SACN,MAEF,KAAKN,EAAMnB,KAAKC,KACdiG,EAAI/E,EAAMvB,YAAa,GACvBuB,EAAMM,SACN,MAEF,KAAKN,EAAMnB,KAAKG,MACd+F,GAAK/E,EAAMvB,YAAa,GACxBuB,EAAMM,UA2NVsH,CAAcrB,GAGhB,SAAS3D,EAAa2D,GACpB,IAAsB,IAAlBvG,EAAM7C,QAAV,CAIA,OAFAoJ,EAAMG,iBAEEH,EAAMsB,QAAQvC,QACpB,KAAK,EACH,IAA2B,IAAvBtF,EAAM5B,aAAwB,QAhOxC,SAAgCmI,GAG9B5C,EAAY1B,IAAIsE,EAAMsB,QAAQ,GAAGC,MAAOvB,EAAMsB,QAAQ,GAAGE,OA+NrDC,CAAuBzB,GAEvBhG,EAAQC,EAAMiD,aAEd,MAEF,KAAK,EACH,IAAyB,IAArBzD,EAAM9B,aAA4C,IAApB8B,EAAM1B,UAAqB,QAnOnE,SAAkCiI,GAGhC,GAAIvG,EAAM9B,WAAY,CACpB,IAAI+J,EAAK1B,EAAMsB,QAAQ,GAAGC,MAAQvB,EAAMsB,QAAQ,GAAGC,MAC/CI,EAAK3B,EAAMsB,QAAQ,GAAGE,MAAQxB,EAAMsB,QAAQ,GAAGE,MAE/CrD,EAAW9G,KAAKuK,KAAKF,EAAKA,EAAKC,EAAKA,GAExCjE,EAAWhC,IAAI,EAAGyC,GAGpB,GAAI1E,EAAM1B,UAAW,CACnB,IAAI8I,EAAI,IAAOb,EAAMsB,QAAQ,GAAGC,MAAQvB,EAAMsB,QAAQ,GAAGC,OACrDT,EAAI,IAAOd,EAAMsB,QAAQ,GAAGE,MAAQxB,EAAMsB,QAAQ,GAAGE,OAEzDjE,EAAS7B,IAAImF,EAAGC,IAqNde,CAAyB7B,GAEzBhG,EAAQC,EAAMkD,gBAEd,MAEF,QACEnD,EAAQC,EAAMC,KAGdF,IAAUC,EAAMC,MAClBT,EAAMI,cAAcgD,IAIxB,SAASN,EAAYyD,GACnB,IAAsB,IAAlBvG,EAAM7C,QAKV,OAHAoJ,EAAMG,iBACNH,EAAMkB,kBAEElB,EAAMsB,QAAQvC,QACpB,KAAK,EACH,IAA2B,IAAvBtF,EAAM5B,aAAwB,OAClC,GAAImC,IAAUC,EAAMiD,aAAc,QAzOxC,SAA+B8C,GAG7B3C,EAAU3B,IAAIsE,EAAMsB,QAAQ,GAAGC,MAAOvB,EAAMsB,QAAQ,GAAGE,OAEvDlE,EACGsD,WAAWvD,EAAWD,GACtB3B,eAAehC,EAAM3B,aAExB,IAAI6G,EACFlF,EAAMjD,aAAeG,SAAW8C,EAAMjD,WAAWoI,KAAOnF,EAAMjD,WAEhEsE,EAAY,EAAIzD,KAAKC,GAAKgG,EAAYuD,EAAKlC,EAAQO,cAEnDlB,EAAU,EAAI3G,KAAKC,GAAKgG,EAAYwD,EAAKnC,EAAQO,cAEjD9B,EAAY1D,KAAK2D,GAEjB5D,EAAMM,SAyNF+H,CAAsB9B,GAEtB,MAEF,KAAK,EACH,IAAyB,IAArBvG,EAAM9B,aAA4C,IAApB8B,EAAM1B,UAAqB,OAC7D,GAAIiC,IAAUC,EAAMkD,gBAAiB,QA5N3C,SAAiC6C,GAG/B,GAAIvG,EAAM9B,WAAY,CACpB,IAAI+J,EAAK1B,EAAMsB,QAAQ,GAAGC,MAAQvB,EAAMsB,QAAQ,GAAGC,MAC/CI,EAAK3B,EAAMsB,QAAQ,GAAGE,MAAQxB,EAAMsB,QAAQ,GAAGE,MAE/CrD,EAAW9G,KAAKuK,KAAKF,EAAKA,EAAKC,EAAKA,GAExChE,EAASjC,IAAI,EAAGyC,GAEhBP,EAAWlC,IAAI,EAAGrE,KAAKyG,IAAIH,EAASmD,EAAIpD,EAAWoD,EAAGrH,EAAM7B,YAE5DgI,EAAQhC,EAAWkD,GAEnBpD,EAAWhE,KAAKiE,GAGlB,GAAIlE,EAAM1B,UAAW,CACnB,IAAI8I,EAAI,IAAOb,EAAMsB,QAAQ,GAAGC,MAAQvB,EAAMsB,QAAQ,GAAGC,OACrDT,EAAI,IAAOd,EAAMsB,QAAQ,GAAGE,MAAQxB,EAAMsB,QAAQ,GAAGE,OAEzDhE,EAAO9B,IAAImF,EAAGC,GAEdrD,EAASmD,WAAWpD,EAAQD,GAAU9B,eAAehC,EAAMzB,UAE3DwG,EAAIf,EAASoD,EAAGpD,EAASqD,GAEzBvD,EAAS7D,KAAK8D,GAGhB/D,EAAMM,SA+LFgI,CAAwB/B,GAExB,MAEF,QACEhG,EAAQC,EAAMC,MAIpB,SAASoC,EAAW0D,IACI,IAAlBvG,EAAM7C,UAIV6C,EAAMI,cAAciD,GAEpB9C,EAAQC,EAAMC,MAGhB,SAASgC,EAAc8D,IACC,IAAlBvG,EAAM7C,SAEVoJ,EAAMG,iBAKR1G,EAAMjD,WAAWmK,iBAAiB,cAAezE,GAAe,GAEhEzC,EAAMjD,WAAWmK,iBAAiB,YAAaxE,GAAa,GAC5D1C,EAAMjD,WAAWmK,iBAAiB,QAASvE,GAAc,GAEzD3C,EAAMjD,WAAWmK,iBAAiB,aAActE,GAAc,GAC9D5C,EAAMjD,WAAWmK,iBAAiB,WAAYrE,GAAY,GAC1D7C,EAAMjD,WAAWmK,iBAAiB,YAAapE,GAAa,GAE5DG,OAAOiE,iBAAiB,UAAWhE,GAAW,GAI9ClG,KAAKsD,WAGPzD,EAAc0L,UAAYC,OAAOC,OAAOrL,IAAsBmL,YACtCG,YAAc7L,EAEtC2L,OAAOG,iBAAiB9L,EAAc0L,UAAW,CAC/CK,OAAQ,CACNC,IAAK,WAEH,OADA5C,QAAQC,KAAK,4DACNlJ,KAAKd,SAMhB4M,OAAQ,CACND,IAAK,WAIH,OAHA5C,QAAQC,KACN,+EAEMlJ,KAAKkB,YAGf+D,IAAK,SAAS8G,GACZ9C,QAAQC,KACN,8EAEFlJ,KAAKkB,YAAc6K,IAIvBC,SAAU,CACRH,IAAK,WAIH,OAHA5C,QAAQC,KACN,mFAEMlJ,KAAKoB,cAGf6D,IAAK,SAAS8G,GACZ9C,QAAQC,KACN,kFAEFlJ,KAAKoB,cAAgB2K,IAIzBE,MAAO,CACLJ,IAAK,WAIH,OAHA5C,QAAQC,KACN,6EAEMlJ,KAAKsB,WAGf2D,IAAK,SAAS8G,GACZ9C,QAAQC,KACN,4EAEFlJ,KAAKsB,WAAayK,IAItBG,OAAQ,CACNL,IAAK,WAIH,OAHA5C,QAAQC,KACN,+EAEMlJ,KAAK4B,YAGfqD,IAAK,SAAS8G,GACZ9C,QAAQC,KACN,8EAEFlJ,KAAK4B,YAAcmK,IAIvBI,aAAc,CACZN,IAAK,WAIH,OAHA5C,QAAQC,KACN,wFAEMlJ,KAAKgB,eAGfiE,IAAK,SAAS8G,GACZ9C,QAAQC,KACN,uFAEFlJ,KAAKgB,eAAiB+K,IAI1BK,qBAAsB,CACpBP,IAAK,WAIH,OAHA5C,QAAQC,KACN,4FAEKlJ,KAAKiB,eAGdgE,IAAK,SAAS8G,GACZ9C,QAAQC,KACN,4FAEFlJ,KAAKiB,cAAgB8K,MAKZlM,Q,wBCv1BAwM,E,kDAtGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA0BVC,UAAU,SAACC,EAAGC,EAAKC,GACf,IAAIC,EAAM,CACNH,GAAGA,GAGP,OAAOA,GACH,KAAK,EACDG,EAAG,OAAa,CACZvC,EAAS,MAAPqC,EAAWG,OAAOF,EAAExN,OAAO6M,OAAO,IAAI,EAAKO,MAAMO,cAAczC,EACjEC,EAAS,MAAPoC,EAAWG,OAAOF,EAAExN,OAAO6M,OAAO,IAAI,EAAKO,MAAMO,cAAcxC,EACjEyC,EAAS,MAAPL,EAAWG,OAAOF,EAAExN,OAAO6M,OAAO,IAAI,EAAKO,MAAMO,cAAcC,GAErE,EAAKC,SAAS,CACVF,cAAcF,EAAIK,SAEtB,MACJ,KAAK,EACDL,EAAG,OAAa,CACZvC,EAAS,MAAPqC,EAAWG,OAAOF,EAAExN,OAAO6M,OAAO,IAAI,EAAKO,MAAMW,cAAc7C,EACjEC,EAAS,MAAPoC,EAAWG,OAAOF,EAAExN,OAAO6M,OAAO,IAAI,EAAKO,MAAMW,cAAc5C,EACjEyC,EAAS,MAAPL,EAAWG,OAAOF,EAAExN,OAAO6M,OAAO,IAAI,EAAKO,MAAMW,cAAcH,GAErE,EAAKC,SAAS,CACVE,cAAcN,EAAIK,SAK9B,EAAKV,MAAMY,eAAeP,IArD1B,EAAKpJ,MAAM,CACPsJ,cAAc,CACVzC,EAAE,KACFC,EAAE,KACFyC,EAAE,MAENG,cAAc,CACV7C,EAAE,KACFC,EAAE,KACFyC,EAAE,OAXK,E,qDAgBnB,c,gCAIA,SAAmBK,EAAUC,M,kCAI7B,c,oBAkCA,WAAS,IAAD,OAMJ,OACI,sBAAKC,MANU,CACfC,MAAM,IACNC,OAAO,KAIP,UACI,qBAAKF,MAAO,CAACG,QAAQ,GAAGC,gBAAgB,WAAxC,qCACA,sBAAKJ,MAAO,CAACK,QAAQ,OAAOD,gBAAgB,WAA5C,UACI,qBAAKJ,MAAO,CAACG,QAAQ,GAArB,eACA,qBAAKH,MAAO,CAACG,QAAQ,EAAEF,MAAM,IAA7B,SAAmCtN,KAAKuD,MAAMsJ,cAAczC,EAAEpK,KAAKuD,MAAMsJ,cAAczC,EAAEpK,KAAKsM,MAAMO,cAAczC,IAClH,uBAAOiD,MAAO,CAACG,QAAQ,GAAIrH,KAAK,QAAQwH,KAAK,IAAInJ,IAAI,IAAID,IAAI,MAAMqJ,SAAU,SAAClB,GAAD,OAAK,EAAKH,UAAU,EAAE,IAAIG,IAAImB,aAAc7N,KAAKsM,MAAMO,cAAczC,OAEtJ,sBAAKiD,MAAO,CAACK,QAAQ,OAAOD,gBAAgB,WAA5C,UACI,qBAAKJ,MAAO,CAACG,QAAQ,GAArB,eACA,qBAAKH,MAAO,CAACG,QAAQ,EAAEF,MAAM,IAA7B,SAAmCtN,KAAKuD,MAAMsJ,cAAcxC,EAAErK,KAAKuD,MAAMsJ,cAAcxC,EAAErK,KAAKsM,MAAMO,cAAcxC,IAClH,uBAAOgD,MAAO,CAACG,QAAQ,GAAIrH,KAAK,QAAQwH,KAAK,IAAInJ,IAAI,IAAID,IAAI,MAAMqJ,SAAU,SAAClB,GAAD,OAAK,EAAKH,UAAU,EAAE,IAAIG,IAAImB,aAAc7N,KAAKsM,MAAMO,cAAcxC,OAEtJ,sBAAKgD,MAAO,CAACK,QAAQ,OAAOD,gBAAgB,WAA5C,UACI,qBAAKJ,MAAO,CAACG,QAAQ,GAArB,eACA,qBAAKH,MAAO,CAACG,QAAQ,EAAEF,MAAM,IAA7B,SAAmCtN,KAAKuD,MAAMsJ,cAAcC,EAAE9M,KAAKuD,MAAMsJ,cAAcC,EAAE9M,KAAKsM,MAAMO,cAAcC,IAClH,uBAAOO,MAAO,CAACG,QAAQ,GAAIrH,KAAK,QAAQwH,KAAK,IAAInJ,IAAI,IAAID,IAAI,MAAMqJ,SAAU,SAAClB,GAAD,OAAK,EAAKH,UAAU,EAAE,IAAIG,IAAImB,aAAc7N,KAAKsM,MAAMO,cAAcC,OAEtJ,qBAAKO,MAAO,CAACG,QAAQ,GAAGC,gBAAgB,WAAxC,qCACA,sBAAKJ,MAAO,CAACK,QAAQ,OAAOD,gBAAgB,WAA5C,UACI,qBAAKJ,MAAO,CAACG,QAAQ,GAArB,eACA,qBAAKH,MAAO,CAACG,QAAQ,EAAEF,MAAM,IAA7B,SAAmCtN,KAAKuD,MAAM0J,cAAc7C,EAAEpK,KAAKuD,MAAM0J,cAAc7C,EAAEpK,KAAKsM,MAAMW,cAAc7C,IAClH,uBAAOiD,MAAO,CAACG,QAAQ,GAAIrH,KAAK,QAAQwH,KAAK,IAAInJ,IAAI,IAAID,IAAI,MAAMqJ,SAAU,SAAClB,GAAD,OAAK,EAAKH,UAAU,EAAE,IAAIG,IAAImB,aAAc7N,KAAKsM,MAAMW,cAAc7C,OAEtJ,sBAAKiD,MAAO,CAACK,QAAQ,OAAOD,gBAAgB,WAA5C,UACI,qBAAKJ,MAAO,CAACG,QAAQ,GAArB,eACA,qBAAKH,MAAO,CAACG,QAAQ,EAAEF,MAAM,IAA7B,SAAmCtN,KAAKuD,MAAM0J,cAAc5C,EAAErK,KAAKuD,MAAM0J,cAAc5C,EAAErK,KAAKsM,MAAMW,cAAc5C,IAClH,uBAAOgD,MAAO,CAACG,QAAQ,GAAIrH,KAAK,QAAQwH,KAAK,IAAInJ,IAAI,IAAID,IAAI,MAAMqJ,SAAU,SAAClB,GAAD,OAAK,EAAKH,UAAU,EAAE,IAAIG,IAAImB,aAAc7N,KAAKsM,MAAMW,cAAc5C,OAEtJ,sBAAKgD,MAAO,CAACK,QAAQ,OAAOD,gBAAgB,WAA5C,UACI,qBAAKJ,MAAO,CAACG,QAAQ,GAArB,eACA,qBAAKH,MAAO,CAACG,QAAQ,EAAEF,MAAM,IAA7B,SAAmCtN,KAAKuD,MAAM0J,cAAcH,EAAE9M,KAAKuD,MAAM0J,cAAcH,EAAE9M,KAAKsM,MAAMW,cAAcH,IAClH,uBAAOO,MAAO,CAACG,QAAQ,GAAIrH,KAAK,QAAQwH,KAAK,IAAInJ,IAAI,IAAID,IAAI,MAAMqJ,SAAU,SAAClB,GAAD,OAAK,EAAKH,UAAU,EAAE,IAAIG,IAAImB,aAAc7N,KAAKsM,MAAMW,cAAcH,c,GAjG3IgB,aC+EZC,E,kDA9EX,WAAYzB,GAAQ,uCACVA,G,qDAGV,c,gCAIA,SAAmBa,EAAUC,M,kCAI7B,c,oBAKA,WACInE,QAAQ+E,IAAI,0BACZ,IAAIC,EAAY,CACZT,QAAQ,OACRC,gBAAgB,WAGhBS,EAAS,CACTR,QAAQ,OACRD,gBAAgB,WAGhBU,EAAW,CACXb,MAAM,MACNE,QAAQ,OAGZ,OACQxN,KAAKsM,MAAM8B,gBAAgBC,KAC3B,gCACI,qBAAKhB,MAAOY,EAAZ,SAA0B,sBAC1B,sBAAKZ,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,OACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgBC,UAErC,sBAAKhB,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,SACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgBjI,UAErC,qBAAKkH,MAAOY,EAAZ,SAA0B,aAC1B,sBAAKZ,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,MACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgB7L,SAAS6H,OAE9C,sBAAKiD,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,MACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgB7L,SAAS8H,OAE9C,sBAAKgD,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,MACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgB7L,SAASuK,OAE9C,qBAAKO,MAAOY,EAAZ,SAA0B,UAC1B,sBAAKZ,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,UACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgBzJ,MAAM2I,WAE3C,sBAAKD,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,WACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgBzJ,MAAM4I,YAE3C,sBAAKF,MAAOa,EAAZ,UACI,qBAAKb,MAAOc,EAAZ,SAAyB,UACzB,8BAAMnO,KAAKsM,MAAM8B,gBAAgBzJ,MAAM2J,cAI/C,gC,GA3EcR,aCORA,YCFtBS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvO,SAASwO,eAAe,SAM1BtP,M","file":"static/js/main.149d5df1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as THREE from 'three';\n\n// Disable ESLINT for this page\n/* eslint-disable */\n\n/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author bastienrobert / http://github.com/bastienrobert\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nlet OrbitControls = function(object, domElement) {\n  this.object = object;\n\n  this.domElement = domElement !== undefined ? domElement : document;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new THREE.Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.25;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.panSpeed = 1.0;\n  this.screenSpacePanning = false; // if true, pan in screen-space\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  this.enableKeys = true;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = {\n    LEFT: THREE.MOUSE.LEFT,\n    MIDDLE: THREE.MOUSE.MIDDLE,\n    RIGHT: THREE.MOUSE.RIGHT\n  };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function() {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function() {\n    return spherical.theta;\n  };\n\n  this.saveState = function() {\n    scope.target0.copy(scope.target);\n    scope.position0.copy(scope.object.position);\n    scope.zoom0 = scope.object.zoom;\n  };\n\n  this.reset = function() {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n\n    scope.update();\n\n    state = STATE.NONE;\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = (function() {\n    var offset = new THREE.Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new THREE.Quaternion().setFromUnitVectors(\n      object.up,\n      new THREE.Vector3(0, 1, 0)\n    );\n    var quatInverse = quat.clone().inverse();\n\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n\n    return function update() {\n      var position = scope.object.position;\n\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi;\n\n      // restrict theta to be between desired limits\n      spherical.theta = Math.max(\n        scope.minAzimuthAngle,\n        Math.min(scope.maxAzimuthAngle, spherical.theta)\n      );\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(\n        scope.minPolarAngle,\n        Math.min(scope.maxPolarAngle, spherical.phi)\n      );\n\n      spherical.makeSafe();\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(\n        scope.minDistance,\n        Math.min(scope.maxDistance, spherical.radius)\n      );\n\n      // move target to panned location\n      scope.target.add(panOffset);\n\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n\n      position.copy(scope.target).add(offset);\n\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n\n        panOffset.multiplyScalar(1 - scope.dampingFactor);\n      } else {\n        sphericalDelta.set(0, 0, 0);\n\n        panOffset.set(0, 0, 0);\n      }\n\n      scale = 1;\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (\n        zoomChanged ||\n        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n      ) {\n        scope.dispatchEvent(changeEvent);\n\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n\n        return true;\n      }\n\n      return false;\n    };\n  })();\n\n  this.dispose = function() {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n\n    window.removeEventListener('keydown', onKeyDown, false);\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: 'change' };\n  var startEvent = { type: 'start' };\n  var endEvent = { type: 'end' };\n\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY_PAN: 4\n  };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n    return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = (function() {\n    var v = new THREE.Vector3();\n\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n\n      panOffset.add(v);\n    };\n  })();\n\n  var panUp = (function() {\n    var v = new THREE.Vector3();\n\n    return function panUp(distance, objectMatrix) {\n      if (scope.screenSpacePanning === true) {\n        v.setFromMatrixColumn(objectMatrix, 1);\n      } else {\n        v.setFromMatrixColumn(objectMatrix, 0);\n        v.crossVectors(scope.object.up, v);\n      }\n\n      v.multiplyScalar(distance);\n\n      panOffset.add(v);\n    };\n  })();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = (function() {\n    var offset = new THREE.Vector3();\n\n    return function pan(deltaX, deltaY) {\n      var element =\n        scope.domElement === document\n          ? scope.domElement.body\n          : scope.domElement;\n\n      if (scope.object.isPerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0);\n\n        // we use only clientHeight here so aspect ratio does not distort speed\n        panLeft(\n          (2 * deltaX * targetDistance) / element.clientHeight,\n          scope.object.matrix\n        );\n        panUp(\n          (2 * deltaY * targetDistance) / element.clientHeight,\n          scope.object.matrix\n        );\n      } else if (scope.object.isOrthographicCamera) {\n        // orthographic\n        panLeft(\n          (deltaX * (scope.object.right - scope.object.left)) /\n            scope.object.zoom /\n            element.clientWidth,\n          scope.object.matrix\n        );\n        panUp(\n          (deltaY * (scope.object.top - scope.object.bottom)) /\n            scope.object.zoom /\n            element.clientHeight,\n          scope.object.matrix\n        );\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn(\n          'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.'\n        );\n        scope.enablePan = false;\n      }\n    };\n  })();\n\n  function dollyIn(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(\n        scope.minZoom,\n        Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n      );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\n        'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n      );\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object.isPerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object.isOrthographicCamera) {\n      scope.object.zoom = Math.max(\n        scope.minZoom,\n        Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n      );\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn(\n        'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n      );\n      scope.enableZoom = false;\n    }\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n    //console.log( 'handleMouseDownRotate' );\n\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    //console.log( 'handleMouseDownDolly' );\n\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    //console.log( 'handleMouseDownPan' );\n\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    //console.log( 'handleMouseMoveRotate' );\n\n    rotateEnd.set(event.clientX, event.clientY);\n\n    rotateDelta\n      .subVectors(rotateEnd, rotateStart)\n      .multiplyScalar(scope.rotateSpeed);\n\n    var element =\n      scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n    rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    //console.log( 'handleMouseMoveDolly' );\n\n    dollyEnd.set(event.clientX, event.clientY);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    //console.log( 'handleMouseMovePan' );\n\n    panEnd.set(event.clientX, event.clientY);\n\n    panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n  }\n\n  function handleMouseUp(event) {\n    // console.log( 'handleMouseUp' );\n  }\n\n  function handleMouseWheel(event) {\n    // console.log( 'handleMouseWheel' );\n\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    //console.log( 'handleKeyDown' );\n\n    // prevent the browser from scrolling on cursor up/down\n\n    event.preventDefault();\n\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    //console.log( 'handleTouchStartRotate' );\n\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchStartDollyPan(event) {\n    //console.log( 'handleTouchStartDollyPan' );\n\n    if (scope.enableZoom) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyStart.set(0, distance);\n    }\n\n    if (scope.enablePan) {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panStart.set(x, y);\n    }\n  }\n\n  function handleTouchMoveRotate(event) {\n    //console.log( 'handleTouchMoveRotate' );\n\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    rotateDelta\n      .subVectors(rotateEnd, rotateStart)\n      .multiplyScalar(scope.rotateSpeed);\n\n    var element =\n      scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight); // yes, height\n\n    rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleTouchMoveDollyPan(event) {\n    //console.log( 'handleTouchMoveDollyPan' );\n\n    if (scope.enableZoom) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n      var distance = Math.sqrt(dx * dx + dy * dy);\n\n      dollyEnd.set(0, distance);\n\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n      dollyIn(dollyDelta.y);\n\n      dollyStart.copy(dollyEnd);\n    }\n\n    if (scope.enablePan) {\n      var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n      var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n      panEnd.set(x, y);\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n      pan(panDelta.x, panDelta.y);\n\n      panStart.copy(panEnd);\n    }\n\n    scope.update();\n  }\n\n  function handleTouchEnd(event) {\n    //console.log( 'handleTouchEnd' );\n  }\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n\n    // Prevent the browser from scrolling.\n\n    event.preventDefault();\n\n    // Manually set the focus since calling preventDefault above\n    // prevents the browser from setting it automatically.\n\n    scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n    switch (event.button) {\n      case scope.mouseButtons.LEFT:\n        if (event.ctrlKey || event.metaKey || event.shiftKey) {\n          if (scope.enablePan === false) return;\n\n          handleMouseDownPan(event);\n\n          state = STATE.PAN;\n        } else {\n          if (scope.enableRotate === false) return;\n\n          handleMouseDownRotate(event);\n\n          state = STATE.ROTATE;\n        }\n\n        break;\n\n      case scope.mouseButtons.MIDDLE:\n        if (scope.enableZoom === false) return;\n\n        handleMouseDownDolly(event);\n\n        state = STATE.DOLLY;\n\n        break;\n\n      case scope.mouseButtons.RIGHT:\n        if (scope.enablePan === false) return;\n\n        handleMouseDownPan(event);\n\n        state = STATE.PAN;\n\n        break;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (state) {\n      case STATE.ROTATE:\n        if (scope.enableRotate === false) return;\n\n        handleMouseMoveRotate(event);\n\n        break;\n\n      case STATE.DOLLY:\n        if (scope.enableZoom === false) return;\n\n        handleMouseMoveDolly(event);\n\n        break;\n\n      case STATE.PAN:\n        if (scope.enablePan === false) return;\n\n        handleMouseMovePan(event);\n\n        break;\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n\n    handleMouseUp(event);\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (\n      scope.enabled === false ||\n      scope.enableZoom === false ||\n      (state !== STATE.NONE && state !== STATE.ROTATE)\n    )\n      return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    scope.dispatchEvent(startEvent);\n\n    handleMouseWheel(event);\n\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (\n      scope.enabled === false ||\n      scope.enableKeys === false ||\n      scope.enablePan === false\n    )\n      return;\n\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    switch (event.touches.length) {\n      case 1: // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n\n        handleTouchStartRotate(event);\n\n        state = STATE.TOUCH_ROTATE;\n\n        break;\n\n      case 2: // two-fingered touch: dolly-pan\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n\n        handleTouchStartDollyPan(event);\n\n        state = STATE.TOUCH_DOLLY_PAN;\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case 1: // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\n\n        handleTouchMoveRotate(event);\n\n        break;\n\n      case 2: // two-fingered touch: dolly-pan\n        if (scope.enableZoom === false && scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\n\n        handleTouchMoveDollyPan(event);\n\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n\n    handleTouchEnd(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n  }\n\n  //\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, false);\n\n  scope.domElement.addEventListener('touchstart', onTouchStart, false);\n  scope.domElement.addEventListener('touchend', onTouchEnd, false);\n  scope.domElement.addEventListener('touchmove', onTouchMove, false);\n\n  window.addEventListener('keydown', onKeyDown, false);\n\n  // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties(OrbitControls.prototype, {\n  center: {\n    get: function() {\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\n      return this.target;\n    }\n  },\n\n  // backward compatibility\n\n  noZoom: {\n    get: function() {\n      console.warn(\n        'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.'\n      );\n      return !this.enableZoom;\n    },\n\n    set: function(value) {\n      console.warn(\n        'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.'\n      );\n      this.enableZoom = !value;\n    }\n  },\n\n  noRotate: {\n    get: function() {\n      console.warn(\n        'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.'\n      );\n      return !this.enableRotate;\n    },\n\n    set: function(value) {\n      console.warn(\n        'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.'\n      );\n      this.enableRotate = !value;\n    }\n  },\n\n  noPan: {\n    get: function() {\n      console.warn(\n        'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.'\n      );\n      return !this.enablePan;\n    },\n\n    set: function(value) {\n      console.warn(\n        'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.'\n      );\n      this.enablePan = !value;\n    }\n  },\n\n  noKeys: {\n    get: function() {\n      console.warn(\n        'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.'\n      );\n      return !this.enableKeys;\n    },\n\n    set: function(value) {\n      console.warn(\n        'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.'\n      );\n      this.enableKeys = !value;\n    }\n  },\n\n  staticMoving: {\n    get: function() {\n      console.warn(\n        'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.'\n      );\n      return !this.enableDamping;\n    },\n\n    set: function(value) {\n      console.warn(\n        'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.'\n      );\n      this.enableDamping = !value;\n    }\n  },\n\n  dynamicDampingFactor: {\n    get: function() {\n      console.warn(\n        'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n      );\n      return this.dampingFactor;\n    },\n\n    set: function(value) {\n      console.warn(\n        'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n      );\n      this.dampingFactor = value;\n    }\n  }\n});\n\nexport default OrbitControls;","import React, { Component } from 'react';\n\nclass RotationMenu extends Component{\n    constructor(props) {\n        super(props)\n        this.state={\n            rotationMesh1:{\n                x:null,\n                y:null,\n                z:null\n            },\n            rotationMesh2:{\n                x:null,\n                y:null,\n                z:null\n            }\n        }    \n    }\n\n    componentDidMount(){   \n       \n    }\n\n    componentDidUpdate(preProps, preState){\n        \n    }\n\n    componentWillUnmount() {\n    }\n\n    getRotate=(ID,axis,e)=>{\n        let obj = {\n            ID:ID\n        }\n\n        switch(ID){\n            case 1:\n                obj['values'] = {\n                    x:axis==='x'?Number(e.target.value)/100:this.props.rotationMesh1.x,\n                    y:axis==='y'?Number(e.target.value)/100:this.props.rotationMesh1.y,\n                    z:axis==='z'?Number(e.target.value)/100:this.props.rotationMesh1.z\n                }\n                this.setState({\n                    rotationMesh1:obj.values\n                })\n                break\n            case 2:\n                obj['values'] = {\n                    x:axis==='x'?Number(e.target.value)/100:this.props.rotationMesh2.x,\n                    y:axis==='y'?Number(e.target.value)/100:this.props.rotationMesh2.y,\n                    z:axis==='z'?Number(e.target.value)/100:this.props.rotationMesh2.z\n                }\n                this.setState({\n                    rotationMesh2:obj.values\n                })\n                break\n        }\n\n        this.props.returnRotation(obj)\n    }\n\n    render(){\n        let mainDivStyle = {\n            width:250,\n            height:200\n        }\n      \n        return(\n            <div style={mainDivStyle}>\n                <div style={{padding:10,backgroundColor:\"#c1e6e8\"}}>Plain1 Rotation Control</div>\n                <div style={{display:\"flex\",backgroundColor:\"#93d5d9\"}}>\n                    <div style={{padding:5}}>X</div>\n                    <div style={{padding:5,width:40}}>{this.state.rotationMesh1.x?this.state.rotationMesh1.x:this.props.rotationMesh1.x}</div>\n                    <input style={{padding:5}} type=\"range\" step=\"1\" min=\"0\" max=\"100\" onChange={(e)=>this.getRotate(1,'x',e)} defaultValue={this.props.rotationMesh1.x}  />\n                </div>\n                <div style={{display:\"flex\",backgroundColor:\"#93d5d9\"}}>\n                    <div style={{padding:5}}>Y</div>\n                    <div style={{padding:5,width:40}}>{this.state.rotationMesh1.y?this.state.rotationMesh1.y:this.props.rotationMesh1.y}</div>\n                    <input style={{padding:5}} type=\"range\" step=\"1\" min=\"0\" max=\"100\" onChange={(e)=>this.getRotate(1,'y',e)} defaultValue={this.props.rotationMesh1.y}  />\n                </div>\n                <div style={{display:\"flex\",backgroundColor:\"#93d5d9\"}}>\n                    <div style={{padding:5}}>Z</div>\n                    <div style={{padding:5,width:40}}>{this.state.rotationMesh1.z?this.state.rotationMesh1.z:this.props.rotationMesh1.z}</div>\n                    <input style={{padding:5}} type=\"range\" step=\"1\" min=\"0\" max=\"100\" onChange={(e)=>this.getRotate(1,'z',e)} defaultValue={this.props.rotationMesh1.z}  />\n                </div>\n                <div style={{padding:10,backgroundColor:\"#c1e6e8\"}}>Plain2 Rotation Control</div>\n                <div style={{display:\"flex\",backgroundColor:\"#93d5d9\"}}>\n                    <div style={{padding:5}}>X</div>\n                    <div style={{padding:5,width:40}}>{this.state.rotationMesh2.x?this.state.rotationMesh2.x:this.props.rotationMesh2.x}</div>\n                    <input style={{padding:5}} type=\"range\" step=\"1\" min=\"0\" max=\"100\" onChange={(e)=>this.getRotate(2,'x',e)} defaultValue={this.props.rotationMesh2.x}  />\n                </div>\n                <div style={{display:\"flex\",backgroundColor:\"#93d5d9\"}}>\n                    <div style={{padding:5}}>Y</div>\n                    <div style={{padding:5,width:40}}>{this.state.rotationMesh2.y?this.state.rotationMesh2.y:this.props.rotationMesh2.y}</div>\n                    <input style={{padding:5}} type=\"range\" step=\"1\" min=\"0\" max=\"100\" onChange={(e)=>this.getRotate(2,'y',e)} defaultValue={this.props.rotationMesh2.y}  />\n                </div>\n                <div style={{display:\"flex\",backgroundColor:\"#93d5d9\"}}>\n                    <div style={{padding:5}}>Z</div>\n                    <div style={{padding:5,width:40}}>{this.state.rotationMesh2.z?this.state.rotationMesh2.z:this.props.rotationMesh2.z}</div>\n                    <input style={{padding:5}} type=\"range\" step=\"1\" min=\"0\" max=\"100\" onChange={(e)=>this.getRotate(2,'z',e)} defaultValue={this.props.rotationMesh2.z}  />\n                </div>\n            </div>\n        )\n    }\n}\nexport default RotationMenu","import React, { Component } from 'react';\n\nclass SelectedObjInfo extends Component{\n    constructor(props) {\n        super(props)\n    }\n\n    componentDidMount(){   \n       \n    }\n\n    componentDidUpdate(preProps, preState){\n        \n    }\n\n    componentWillUnmount() {\n    }\n\n    \n\n    render(){\n        console.log(\"SelectedObjInfo render\")\n        let headerStyle={\n            padding:'10px',\n            backgroundColor:'#c1e6e8'\n        }\n\n        let rowStyle={\n            display:'flex',\n            backgroundColor:'#93d5d9'\n        }\n\n        let titleStyle={\n            width:'30%',\n            padding:'5px',\n        }\n      \n        return(    \n                this.props.selectedObjInfo.name?\n                <div>\n                    <div style={headerStyle}>{\"Object Infomation\"}</div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"ID\"}</div>\n                        <div>{this.props.selectedObjInfo.name}</div>\n                    </div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"Type\"}</div>\n                        <div>{this.props.selectedObjInfo.type}</div>\n                    </div>\n                    <div style={headerStyle}>{\"Position\"}</div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"X\"}</div>\n                        <div>{this.props.selectedObjInfo.position.x}</div>\n                    </div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"Y\"}</div>\n                        <div>{this.props.selectedObjInfo.position.y}</div>\n                    </div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"Z\"}</div>\n                        <div>{this.props.selectedObjInfo.position.z}</div>\n                    </div>\n                    <div style={headerStyle}>{\"Scale\"}</div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"Width\"}</div>\n                        <div>{this.props.selectedObjInfo.scale.width}</div>\n                    </div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"Height\"}</div>\n                        <div>{this.props.selectedObjInfo.scale.height}</div>\n                    </div>\n                    <div style={rowStyle}>\n                        <div style={titleStyle}>{\"Depth\"}</div>\n                        <div>{this.props.selectedObjInfo.scale.depth}</div>\n                    </div>                  \n                </div>\n                :\n                \"None object been selected\"           \n        )\n    }\n}\nexport default SelectedObjInfo","import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport orbControls from './OrbitControls';\nimport Stats from 'stats.js';\nimport {DnDContainer, DnDBackgroundComponent, DnDLayout} from 'dnd-box'\nimport OrbitControls from './OrbitControls';\nimport RotationMenu from './RotationMenu'\nimport SelectedObjInfo from './SelectedObjInfo'\n\nclass DemoApp extends Component{\n    constructor(props) {\n        super(props)\n        this.state={\n            frontViewSize:{\n                w:null,\n                h:null\n            },\n            sideViewSize:{\n                w:null,\n                h:null\n            },\n            topViewSize:{\n                w:null,\n                h:null\n            },\n            rotationMesh1:{\n                x:0.01,\n                y:0,\n                z:0\n            },\n            rotationMesh2:{\n                x:0,\n                y:0.01,\n                z:0\n            },\n            selectedObjInfo:{\n                name:null,\n                type:null,\n                position:null,\n                scale:null\n            },\n            showContainer:null,\n        }\n    }\n\n    componentDidMount(){     \n        this.deployState();\n        const aspect = 1920 / 800;\n\t\tthis.camera1 = new THREE.PerspectiveCamera( \n            100,\n            aspect,\n            0.1,\n            1000 \n        );\t\n\t\tthis.scene = new THREE.Scene();\n        this.camera1.position.set( - 20, 20, 20 );\n\t\tthis.scene.background = new THREE.Color( 0xf0f0f0 );\n        this.createPlane(1, 20, 20,'chocolate',new THREE.Vector3( -20, 10, 0 ),new THREE.Euler( 0, - 90 * THREE.MathUtils.DEG2RAD, 0 ))\n        this.createPlane(2, 10, 10,'chocolate',new THREE.Vector3( 20, 10, 0 ),new THREE.Euler( 0, - 90 * THREE.MathUtils.DEG2RAD, 0 ))\n        this.renderer = new THREE.WebGLRenderer();\n\t\tthis.renderer.setPixelRatio( window.devicePixelRatio );\n\t\tthis.renderer.setSize( 1920, 800);\n\t\tthis.mount.appendChild( this.renderer.domElement );\n        this.sceneGrid = new THREE.GridHelper(50,50)\n        this.scene.add(this.sceneGrid)\n\n        \n\n        this.camera2 = new THREE.PerspectiveCamera(\n            70,\n            200 /200,\n            0.1,\n            1000\n        )\n        this.camera2.position.z =20\n        this.camera2.position.x =0\n        this.camera2.position.y =1\n        this.camera2.lookAt(0,0,0)\n        this.renderer2 = new THREE.WebGLRenderer()\n        this.renderer2.setClearColor(0xeeeeee, 1.0) \n\n        this.camera3 = new THREE.PerspectiveCamera(\n            70,\n            200 / 200,\n            0.1,\n            1000\n        )\n        this.camera3.position.z =0\n        this.camera3.position.x =-20\n        this.camera3.position.y =1\n        this.camera3.lookAt(0,0,0)\n        this.renderer3 = new THREE.WebGLRenderer()\n        this.renderer3.setClearColor(0xeeeeee, 1.0)\n\n        this.camera4 = new THREE.PerspectiveCamera(\n            70,\n            200 / 200,\n            0.1,\n            1000\n        )\n        this.camera4.position.z =0\n        this.camera4.position.x =0\n        this.camera4.position.y =20\n        this.camera4.lookAt(0,0,0)\n        this.renderer4 = new THREE.WebGLRenderer()\n        this.renderer4.setClearColor(0xeeeeee, 1.0)\n\n        this.cameraControl1 = new orbControls(this.camera1,this.renderer.domElement)\n        this.animate()\n    }\n\n    componentDidUpdate(preProps, preState){\n        if(preState.frontViewSize !== this.state.frontViewSize && this.frontView)\n        {\n            this.resizeFrontView()\n        }\n\n        if(preState.sideViewSize !== this.state.sideViewSize && this.sideView)\n        {\n            this.resizeSideView()\n        }\n\n        if(preState.topViewSize !== this.state.topViewSize && this.topView)\n        {\n            this.resizeTopView()\n        }\n    }\n\n    componentWillUnmount() {\n    }\n\n    resizeFrontView=()=>{\n        if(!this.cameraControl2)\n        {\n            this.cameraControl2 = new OrbitControls(this.camera2,this.renderer2.domElement)   \n        }\n        this.cameraControl2.enableRotate = false\n\n        this.renderer2.setSize(this.state.frontViewSize.w-1, this.state.frontViewSize.h-1)\n        this.frontView.appendChild( this.renderer2.domElement )\n\n    }\n\n    resizeSideView=()=>{\n        if(!this.cameraControl3)\n        {\n            this.cameraControl3 = new OrbitControls(this.camera3,this.renderer3.domElement)   \n        }\n        this.cameraControl3.enableRotate = false\n        this.renderer3.setSize(this.state.sideViewSize.w-1, this.state.sideViewSize.h-1)\n        this.sideView.appendChild( this.renderer3.domElement )\n    }\n\n    resizeTopView=()=>{\n        if(!this.cameraControl4)\n        {\n            this.cameraControl4 = new OrbitControls(this.camera4,this.renderer4.domElement)   \n        }\n        this.cameraControl4.enableRotate = false\n        this.renderer4.setSize(this.state.topViewSize.w-1, this.state.topViewSize.h-1)\n        this.topView.appendChild( this.renderer4.domElement )\n    }\n\n    deployState = () => {\n        this.stats = new Stats()\n        this.stats.setMode(0)\n        this.stats.domElement.style.position = 'absolute'  \n        this.mainBody.appendChild(this.stats.domElement)\n    }\n\n    animate=()=>{\n        if(this.frontView)\n        {\n            if(this.frontView.clientWidth !== this.state.frontViewSize.w || this.frontView.clientHeight !== this.state.frontViewSize.h)\n            {\n                this.setState({\n                    frontViewSize:{\n                        w:this.frontView.clientWidth,\n                        h:this.frontView.clientHeight\n                    }\n                })\n            }\n        }\n        else\n        {\n            if(this.state.frontViewSize.w || this.state.frontViewSize.h)\n            {\n                this.setState({\n                    frontViewSize:{\n                        w:null,\n                        h:null\n                    }\n                })\n            }\n        }\n\n        if(this.sideView)\n        {\n            if(this.sideView.clientWidth !== this.state.sideViewSize.w || this.sideView.clientHeight !== this.state.sideViewSize.h)\n            {\n                this.setState({\n                    sideViewSize:{\n                        w:this.sideView.clientWidth,\n                        h:this.sideView.clientHeight\n                    }\n                })\n            }\n        }\n        else\n        {\n            if(this.state.sideViewSize.w || this.state.sideViewSize.h)\n            {\n                this.setState({\n                    sideViewSize:{\n                        w:null,\n                        h:null\n                    }\n                })\n            }\n        }\n\n        if(this.topView)\n        {\n            if(this.topView.clientWidth !== this.state.topViewSize.w || this.topView.clientHeight !== this.state.topViewSize.h)\n            {\n                this.setState({\n                    topViewSize:{\n                        w:this.topView.clientWidth,\n                        h:this.topView.clientHeight\n                    }\n                })\n            }\n        }\n        else\n        {\n            if(this.state.topViewSize.w || this.state.topViewSize.h)\n            {\n                this.setState({\n                    topViewSize:{\n                        w:null,\n                        h:null\n                    }\n                })\n            }\n        }\n\n        this.stats.begin();\n        this.renderer.render(this.scene, this.camera1)\n        this.renderer2.render(this.scene, this.camera2)\n        this.renderer3.render(this.scene, this.camera3)\n        this.renderer4.render(this.scene, this.camera4)\n        this.mesh1.rotation.x += this.state.rotationMesh1.x\n        this.mesh1.rotation.y += this.state.rotationMesh1.y\n        this.mesh1.rotation.z += this.state.rotationMesh1.z\n        this.mesh2.rotation.x += this.state.rotationMesh2.x\n        this.mesh2.rotation.y += this.state.rotationMesh2.y\n        this.mesh2.rotation.z += this.state.rotationMesh2.z\n        this.stats.end();\n        window.requestAnimationFrame(this.animate)\n    }\n\n    createPlane=(ID,width, height, cssColor, pos, rot)=>{   \n        let material = new THREE.MeshBasicMaterial( { color: 0x0000ff, side: THREE.DoubleSide } );\n        let geometry = new THREE.PlaneGeometry( width, height );\n        switch(ID){\n            case 1:\n                this.mesh1 = new THREE.Mesh( geometry, material );\n\t\t        this.mesh1.position.copy( pos );\n                this.mesh1.name = 'plain1'\n\t\t        this.scene.add( this.mesh1 );\n                break\n            case 2:\n                this.mesh2 = new THREE.Mesh( geometry, material );\n\t\t        this.mesh2.position.copy( pos );\n                this.mesh2.name = 'plain2'\n\t\t        this.scene.add( this.mesh2 );\n                break\n        }\t\n    }\n\n    showContainerClick=()=>{\n        this.setState({\n            showContainer:[1,2,3,4,5]\n        },()=>{\n            this.setState({\n                showContainer:null\n            })\n        })\n    }\n\n    threeDLayerMouseDown=(e)=>{\n        //e.preventDefault()\n        //e.stopPropagation()\n        let result = this.detectObjectSelectedOrNot(e)\n        if(result && this.state.selectedObjInfo.name === result.name)\n        {\n            if(result.name === \"plain1\")\n            {\n                this.selectedObjectPaintedOrNot(this.mesh1,false)                \n            }\n            \n        }\n        else if(result && this.state.selectedObjInfo.name !== result.name)\n        {\n            if(result.name === \"plain1\")\n            {\n                this.selectedObjectPaintedOrNot(this.mesh1,true) \n                this.selectedObjectPaintedOrNot(this.mesh2,false)\n            }\n            else\n            {\n                this.selectedObjectPaintedOrNot(this.mesh1,false) \n                this.selectedObjectPaintedOrNot(this.mesh2,true)\n            }\n\n            let obj = {\n                name:result.name,\n                type:result.type,\n                position:{\n                    x:result.position.x,\n                    y:result.position.y,\n                    z:result.position.z\n                },\n                scale:{\n                    width:result.geometry.parameters.width,\n                    height:result.geometry.parameters.height,\n                    depth:result.geometry.parameters.depth?result.geometry.parameters.depth:0\n                }\n            }\n            \n            this.setState({\n                selectedObjInfo:obj\n            })         \n        }\n        else\n        {\n            let obj = {\n                name:null,\n                type:null,\n                position:null,\n                scale:null\n            }\n\n            this.selectedObjectPaintedOrNot(this.mesh1,false) \n            this.selectedObjectPaintedOrNot(this.mesh2,false)\n\n            this.setState({\n                selectedObjInfo:obj\n            })\n        }\n        console.log(result)\n    }\n\n    detectObjectSelectedOrNot=(e)=>{\n        const rayCaster = new THREE.Raycaster()\n        const mouseToken = new THREE.Vector2()\n        this.rect = this.mount.getBoundingClientRect()\n        mouseToken.x = ((e.clientX-this.rect.left)/this.mount.clientWidth)*2-1\n        mouseToken.y = -((e.clientY-this.rect.top)/this.mount.clientHeight)*2+1\n        rayCaster.setFromCamera(mouseToken, this.camera1)\n    \n        let intersects = rayCaster.intersectObjects(this.scene.children)\n        \n        if(intersects.length>0)\n        {\n            for(var i =0; i <intersects.length; i++)\n            {\n                if(intersects[i].object.type == 'Mesh')\n                {\n                    return intersects[i].object\n                }   \n            }\n        }\n        else\n        {\n            return null\n        }\n    }\n\n    selectedObjectPaintedOrNot(object3D,toggle)\n    {\n        if(toggle)\n        {\n            object3D.material.color.set(0x13D73F)\n        }\n        else\n        {\n            object3D.material.color.set(0x0000ff)\n        }\n    }\n\n    \n\n    getBoxesState=(msg)=>{\n        if(this.frontView)\n        {\n            this.resizeFrontView()\n        }\n    }\n\n    returnRotation=(msg)=>{\n        switch(msg.ID){\n            case 1 :\n                if(this.state.rotationMesh1 !== msg.values)\n                {\n                    this.setState({\n                        rotationMesh1:msg.values\n                    })\n                }\n                break\n            case 2 :\n                if(this.state.rotationMesh2 !== msg.values)\n                {\n                    this.setState({\n                        rotationMesh2:msg.values\n                    })\n                }\n                break\n        }\n    }\n\n    render(){\n       \n        console.log(\"DemoApp render\")\n        let boxesSetting=[\n            {\n                boxID:'A',\n                width:200,\n                height:200,\n                x:0,\n                y:100\n            },\n            {\n                boxID:'B',\n                width:200,\n                height:200,\n                x:200,\n                y:100\n            },\n            {\n                boxID:'C',\n                width:200,\n                height:200,\n                x:400,\n                y:100\n            },\n            {\n                boxID:'D',\n                width:200,\n                height:200,\n                x:600,\n                y:100\n            },\n            {\n                boxID:'E',\n                width:200,\n                height:200,\n                x:800,\n                y:100\n            }\n        ]\n\n        return(\n            <div ref={(mainBody)=>{this.mainBody = mainBody}} style={{width:'100%',height:'100%',borderTop:\"1px solid black\", borderBottom:\"1px solid black\"}}  onMouseDown={this.threeDLayerMouseDown}>\n                <div style={{width:1000,height:50,left:100,position:'absolute',padding:10}}>\n                    <button style={{float:'left',height:50}} onClick={this.showContainerClick}>Show Default DnDContainer</button>\n                    <div style={{width:350, lineHeight:'50px', float:'right'}}>{\"dnd-box demo : used in CAD like application\"}</div>\n                </div>\n                <DnDLayout backgroundColor={'pink'} width={1920} height={800} boxColor={''} boxHeaderColor={''} boxTabColor={''} boxHeaderHoverColor={''} boxTabHoverColor={''} boxTabSelectedColor={''} iconHoverColor={''} boxTabRadius={'0px 10px 0px 0px'} boxesSetting={boxesSetting} openContainer={this.state.showContainer}  tabHeight={25} getBoxesState={this.getBoxesState}>\n                    <DnDBackgroundComponent>\n                        <div ref={(mount) => { this.mount = mount }}>\n                        </div>\n                    </DnDBackgroundComponent>\n                    <DnDContainer containerTabTitle={\"Front View\"} containerID={1} boxID={'A'}>\n                        <div style={{width:'100%',height:'100%',overflow:'hidden'}} ref={(frontView) => { this.frontView = frontView }}>\n                        </div>\n                    </DnDContainer>\n                    <DnDContainer containerTabTitle={\"Side View\"} containerID={2} boxID={'B'}>\n                        <div style={{width:'100%',height:'100%',overflow:'hidden'}} ref={(sideView) => { this.sideView = sideView }}>                                 \n                        </div>\n                    </DnDContainer>\n                    <DnDContainer containerTabTitle={\"Top View\"} containerID={3} boxID={'C'}>\n                        <div style={{width:'100%',height:'100%',overflow:'hidden'}} ref={(topView) => { this.topView = topView }}>                                 \n                        </div>\n                    </DnDContainer>\n                    <DnDContainer containerTabTitle={\"Rotation Speed\"} containerID={4} boxID={'D'}>             \n                        <RotationMenu rotationMesh1={this.state.rotationMesh1} rotationMesh2={this.state.rotationMesh2} returnRotation={this.returnRotation}/>          \n                    </DnDContainer>\n                    <DnDContainer containerTabTitle={\"Obj Info\"} containerID={5} boxID={'D'}>\n                        <SelectedObjInfo selectedObjInfo={this.state.selectedObjInfo}/>       \n                    </DnDContainer>        \n                </DnDLayout>\n            </div>\n        )\n    }\n}\nexport default DemoApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DemoApp from './DemoApp'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}